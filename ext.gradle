// external 全局变量
println("${project.name}: apply ext")

// 以下写法为闭包, 可能不会立即赋值
project.ext {

    def androidPluginVersion = "3.5.3"
    _android = [
            plugin           : "com.android.tools.build:gradle:$androidPluginVersion",

            compileSdkVersion: 29,
            buildToolsVersion: '29.0.3',

            minSdkVersion    : 21,
            targetSdkVersion : 29,
            versionCode      : 1,
            versionName      : "1.0.0"
    ]

    def safeArgsVersion = "1.0.0"
    safeArgs = "android.arch.navigation:navigation-safe-args-gradle-plugin:$safeArgsVersion"

    navigationVersion = "2.1.0-alpha06"


    // kotlin
    def kotlinVersion = "1.3.61"
    def kotlinXVersion = "1.2.0"
    def coroutinesVersion = "1.3.3"
    _kotlin = [

            // plugins
            kotlin_gradle_plugin     : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
            kotlin_android_extensions: "org.jetbrains.kotlin:kotlin-android-extensions:$kotlinVersion",

            // libs
            stdlib                   : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            core                     : "androidx.core:core-ktx:$kotlinXVersion",
            coroutines               : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    ]

    def archLifecycleVersion = '2.1.0-rc01'

    lifecycle = [
            extensions: "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion",
            compiler  : "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion",
            viewmodel : "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion",
    ]

    // UI
    def constraintVersion = "1.1.3"

    def androidx_version = "1.1.0"
    support = [

            constraint: "androidx.constraintlayout:constraintlayout:$constraintVersion",
            androidx  : "androidx.appcompat:appcompat:$androidx_version"
    ]

    def workVersion = "2.2.0"

    def work = [:]
    work.runtime = "androidx.work:work-runtime:$workVersion"
    work.testing = "androidx.work:work-testing:$workVersion"
    work.firebase = "androidx.work:work-firebase:$workVersion"
    work.runtime_ktx = "androidx.work:work-runtime-ktx:$workVersion"

    ext.work = work


    test = [
            junit    : 'junit:junit:4.12',
            ext_junit: 'androidx.test.ext:junit:1.1.1',
            espresso : 'androidx.test.espresso:espresso-core:3.2.0',
    ]

    databindingCompiler = "com.android.databinding:compiler:3.0.0"

    multidex = 'com.android.support:multidex:1.0.1'


    def roomVersion = "1.0.0"
    room = [
            runtime : "android.arch.persistence.room:runtime:$roomVersion",
            compiler: "android.arch.persistence.room:compiler:$roomVersion"
    ]

    // net
    def okHttp3Version = "3.8.0"
    okhttp3 = [
            logging_interceptor: "com.squareup.okhttp3:logging-interceptor:$okHttp3Version",
    ]

    def retrofitVersion = "2.7.0"
    retrofit2 = [
            retrofit       : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            adapter_rxjava2: "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
            converter_gson : "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    ]


    def glideVersion = "4.10.0"
    def transformationVersion = "4.1.0"
    glide = [
            glide                : "com.github.bumptech.glide:glide:$glideVersion",
            glide_compiler       : "com.github.bumptech.glide:compiler:$glideVersion",

            glide_transformations: "jp.wasabeef:glide-transformations:$transformationVersion",
            okhttp3_integration  : "com.github.bumptech.glide:okhttp3-integration:$glideVersion",
    ]


    adapter = "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.21"

    gson = "com.google.code.gson:gson:2.8.1"

    xlog = "com.elvishew:xlog:1.6.1"

    klog = 'com.github.zhaokaiqiang.klog:library:1.6.0'

    fresco = 'com.facebook.fresco:fresco:2.1.0'
}
