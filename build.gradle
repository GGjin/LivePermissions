// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    // 导入 external 全局变量
    apply from: "ext.gradle"

    ext.kotlin_version = '1.3.61'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    def isAppModule = it.name == 'app'
    apply plugin: isAppModule ? 'com.android.application' : 'com.android.library'

    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'   // 拓展

    apply plugin: 'kotlin-kapt'
    kapt {
        generateStubs = true
    }

    android {

        compileSdkVersion _android.compileSdkVersion as Integer
        buildToolsVersion _android.buildToolsVersion as String

        defaultConfig {
            if (isAppModule)
                applicationId "com.permission.demo"


            minSdkVersion _android.minSdkVersion as Integer
            targetSdkVersion _android.targetSdkVersion as Integer
            versionCode _android.versionCode as Integer
            versionName _android.versionName as String

            multiDexEnabled true
            vectorDrawables.useSupportLibrary = true
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        }

        flavorDimensions "default"

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
            if (isAppModule ){
                main {
                    jniLibs.srcDirs = ['libs']
                }
            }
        }
    }

    dependencies {

        implementation fileTree(dir: 'libs', include: ['*.jar','*aar'])

        // kotlin
        implementation _kotlin.stdlib
        implementation _kotlin.core
        implementation _kotlin.coroutines


    }

    repositories {
        mavenCentral()
    }

}